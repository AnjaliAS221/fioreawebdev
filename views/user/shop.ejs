<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
  :root {
    --primary-color: #088178;
    --secondary-color: #46698f;
    --text-color: #333;
    --background-color: #f5f5f5;
  }

  .main-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 20px;
    background-color: var(--background-color);
  }

  .shop-topbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding: 15px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .search-form {
    flex-grow: 1;
    max-width: 400px;
    position: relative;
  }

  .search-input {
    width: 100%;
    padding: 10px 15px;
    border: 2px solid var(--primary-color);
    border-radius: 25px;
    transition: all 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(8, 129, 120, 0.2);
  }

  .search-button {
    position: absolute;
    right: 0;
    top: 0;
    height: 100%;
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 0 15px;
    border-top-right-radius: 25px;
    border-bottom-right-radius: 25px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .search-button:hover {
    background-color: #066e62;
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 25px;
    padding: 20px 0;
  }

  .product-card {
  position: relative;
  background-color: white;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.product-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
}

.wishlist-icon {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.3s ease;
  z-index: 10; 
}

.wishlist-icon .fi-rs-heart {
  color: #888;
  font-size: 18px;
  transition: color 0.3s ease;
}

.wishlist-icon.active .fi-rs-heart {
  color: red;
}

.wishlist-icon:hover {
  background-color: rgba(255, 255, 255, 1);
  transform: scale(1.1);
}

.product-card:hover .wishlist-icon {
  opacity: 1; /* Ensure it remains fully visible */
}

.product-image-container {
  height: 250px;
  overflow: hidden;
}

.product-image-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover .product-image-container img {
  transform: scale(1.1);
}


  .product-details {
    padding: 15px;
    text-align: center;
  }

  .product-details h4 {
    color: var(--text-color);
    margin-bottom: 10px;
    font-size: 1.1rem;
  }

  .product-pricing {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }

  .sale-price {
    color: var(--primary-color);
    font-weight: bold;
    font-size: 1.1rem;
  }

  .regular-price {
    color: #6c757d;
    text-decoration: line-through;
    font-size: 0.9rem;
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 30px;
    gap: 10px;
  }

  .pagination .btn {
    padding: 8px 15px;
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .pagination .btn:hover,
  .pagination .btn.active {
    background-color: #066e62;
  }

  @media (max-width: 768px) {
    .shop-topbar {
      flex-direction: column;
      gap: 15px;
    }

    .search-form {
      width: 100%;
    }

    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
  }
</style>

<div class="page-header breadcrumb-wrap">
  <div class="container">
      <div class="breadcrumb">
          <a href="/" rel="nofollow">Home</a>
          <span></span> <a href="/shop">Shop</a>
          
      </div>
  </div>
</div>

<div class="main-container">
  <section class="shop-page container">
    <div class="shop-topbar">
      <form action="/search" method="POST" class="search-form">
        <input type="text" name="query" id="search-input" placeholder="Search items..." class="search-input" />
        <button type="submit" class="search-button">Search</button>
      </form>
      
      <div class="sorting-container">
        <select id="sort-by" class="sort-select" onchange="handleSortChange()">
          <option value="default">Sort by: Default</option>
          <option value="popularity">Popularity</option>
          <option value="price-low-high">Price: Low to High</option>
          <option value="price-high-low">Price: High to Low</option>
          <option value="rating">Average Rating</option>
          <option value="new-arrivals">New Arrivals</option>
          <option value="alphabetical-a-z">Alphabetical (A-Z)</option>
          <option value="alphabetical-z-a">Alphabetical (Z-A)</option>
        </select>
      </div>

      <div class="category-filter-container">
        <select id="cat-filter" class="cat-filter-select" onchange="handleSortChange()">
          <option value="all-categories">All Categories</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>
    </div>

    <main class="product-grid" id="products-container">
      <% if (products && products.length > 0) { %>
        <% products.forEach(product => { %>
          <div class="product-card">

            <td class="action" data-title="Wishlist">
              <a class="wishlist-icon <%= wishlistProducts.includes(product._id) ? 'active' : '' %>" 
                 href="#" 
                 onclick="toggleWishlist('<%= product._id %>')">
                 <i class="fa-solid fa-heart"></i>
              </a>
          </td>
          
            <a href="/productDetails?id=<%= product._id %>">
              <div class="product-image-container">
                <img src="uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>" />
              </div>
              <div class="product-details">
                <h4><%= product.productName %></h4>
                <div class="product-pricing">
                  <span class="sale-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
                  <span class="regular-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                </div>
              </div>
            </a>
          </div>
        <% }); %>
      <% } else { %>
        <p>No products found.</p>
      <% } %>
    </main>

    <div class="pagination">
      <% if (currentPage > 1) { %>
        <a class="btn" href="/shop?page=<%= currentPage - 1 %>">Prev</a>
      <% } %>

      <% for (let i = 1; i <= totalPages; i++) { %>
        <a class="btn <%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %>">
          <%= i %>
        </a>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <a class="btn" href="/shop?page=<%= currentPage + 1 %>">Next</a>
      <% } %>
    </div>
  </section>
</div>

<script>
  
  function handleSortChange() {
    const sortBy = document.getElementById('sort-by').value;
    const category = document.getElementById('cat-filter').value;
    const searchInput = document.getElementById('search-input');
    const searchQuery = searchInput ? searchInput.value : '';

    sessionStorage.setItem('currentFilters', JSON.stringify({
      sort: sortBy,
      category: category,
      search: searchQuery
    }));

    $.ajax({
      url: '/sort-and-search',
      method: 'POST',
      data: {
        sort: sortBy,
        category: category,
        search: searchQuery
      },
      success: function(response) {
        if (response.products && response.products.length > 0) {
          updateProductList(response.products);
        } else {
          $('#products-container').html('<p>No products found.</p>');
          Swal.fire({
            position: "center",
            icon: "warning",
            title: "No products found",
            showConfirmButton: false,
            timer: 1500
          });
        }
      },
      error: function(error) {
        console.error('Error:', error);
        Swal.fire({
          position: "center",
          icon: "error",
          title: "Failed to load products",
          showConfirmButton: false,
          timer: 1500
        });
      }
    });
  }

  document.addEventListener('DOMContentLoaded', function() {

    $.ajax({
      url: '/get-wishlist',
      method: 'GET',
      success: (response) => {
        if (response.wishlist) {
          // Populate client-side wishlist
          clientWishlist = new Set(response.wishlist);
          
          // Update wishlist icons
          document.querySelectorAll('.wishlist-btn').forEach(btn => {
            const productId = btn.getAttribute('onclick').match(/'([^']*)'/)[1];
            if (clientWishlist.has(productId)) {
              btn.classList.add('in-wishlist');
            }
          });
        }
      }
    });

    const sortSelect = document.getElementById('sort-by');
    const categorySelect = document.getElementById('cat-filter');
    const searchInput = document.getElementById('search-input');

    const savedFilters = JSON.parse(sessionStorage.getItem('currentFilters') || '{}');
    if (savedFilters.sort) sortSelect.value = savedFilters.sort;
    if (savedFilters.category) categorySelect.value = savedFilters.category;
    if (savedFilters.search) searchInput.value = savedFilters.search;

    sortSelect.addEventListener('change', handleSortChange);
    categorySelect.addEventListener('change', handleSortChange);

    let searchTimeout;
    searchInput.addEventListener('input', function() {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(handleSortChange, 300);
    });

    handleSortChange();

    document.querySelectorAll('.wishlist-btn').forEach(btn => {
      btn.addEventListener('click', (event) => {
        event.preventDefault();
        event.stopPropagation();
      });
    });

  });


  let clientWishlist = new Set();

  function toggleWishlist(productId, element) {
  event.preventDefault();
  event.stopPropagation();

  console.log('Element passed to toggleWishlist:', element);
  console.log('Event target:', event.target);

  // Determine the correct wishlist icon element
  let wishlistIcon;
  if (element && element.classList.contains('wishlist-icon')) {
    wishlistIcon = element;
  } else if (element && element.closest('.wishlist-icon')) {
    wishlistIcon = element.closest('.wishlist-icon');
  } else {
    wishlistIcon = document.querySelector(`.wishlist-icon[data-product-id="${productId}"]`);
  }

  console.log('Resolved wishlist icon:', wishlistIcon);

  if (!wishlistIcon) {
    console.error('Wishlist icon not found for product:', productId);
    Swal.fire({
      title: 'Error',
      text: 'Could not find wishlist icon',
      icon: 'error',
      timer: 2000
    });
    return;
  }

  $.ajax({
    url: '/toggleWishlist',
    method: 'POST',
    data: {productId: productId},
    success: (response) => {
      if (response.status) {
        wishlistIcon.classList.toggle('wishlist-active');

        Swal.fire({
          title: response.action === 'added' ? "Added to wishlist" : "Removed from wishlist",
          text: response.message,
          icon: response.action === 'added' ? 'success' : 'info',
          timer: 2000,
        });

        if (response.action === 'added') {
          clientWishlist.add(productId);
        } else {
          clientWishlist.delete(productId);
        }
      }
    },
    error: (error) => {
      Swal.fire({
        title: 'Error',
        text: 'There was an error while updating your wishlist',
        icon: 'error',
        timer: 2000
      });
    }
  });
}

  $(document).ready(function() {
    $('.search-form').on('submit', function(e) {
      e.preventDefault();
      handleSortChange();
    });
  });

  function updateProductList(products) {
  const container = $('#products-container');
  container.empty();
  
  products.forEach(product => {
    const isInWishlist = clientWishlist.has(product._id);
    const card = `
      <div class="product-card">
        <a href="#" 
          onclick="toggleWishlist('${product._id}', this)" 
          data-product-id="${product._id}"
          class="wishlist-icon ${isInWishlist ? 'wishlist-active' : ''}">
            <i class="fi-rs-heart"></i>
        </a>
        <a href="/productDetails?id=${product._id}">
          <div class="product-image-container">
            <img src="uploads/re-image/${product.productImage[0]}" alt="${product.productName}" />
          </div>
          <div class="product-details">
            <h4>${product.productName}</h4>
            <div class="product-pricing">
              <span class="sale-price">₹${product.salePrice.toLocaleString('en-IN')}</span>
              <span class="regular-price">₹${product.regularPrice.toLocaleString('en-IN')}</span>
            </div>
          </div>
        </a>
      </div>
    `;
    container.append(card);
  });
}

  // Reapply wishlist state
  document.querySelectorAll('.wishlist-btn').forEach(btn => {
    const productId = btn.getAttribute('onclick').match(/'([^']*)'/)[1];
    if (clientWishlist.has(productId)) {
      btn.classList.add('in-wishlist');
    }
  });

  
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<%- include("../../views/partials/user/footer") %>