<%- include("../../views/partials/user/header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
  :root {
    --primary-color: #800020; 
    --primary-hover: #600018;
    --text-color: #2c2c2c;
    --background-color: #f8f9fa;
    --border-color: #e5e5e5;
    --card-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    --transition: all 0.3s ease;
  }

  .main-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 30px 20px;
    background-color: var(--background-color);
  }

  .breadcrumb-wrap {
    background-color: white;
    padding: 15px 0;
    border-bottom: 1px solid var(--border-color);
    margin-bottom: 30px;
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
  }

  .breadcrumb a {
    color: var(--text-color);
    text-decoration: none;
    transition: var(--transition);
  }

  .breadcrumb a:hover {
    color: var(--primary-color);
  }

  .shop-topbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 20px;
    margin-bottom: 30px;
    padding: 20px;
    background-color: white;
    border-radius: 10px;
    box-shadow: var(--card-shadow);
  }

 
  .search-form {
    flex-grow: 1;
    max-width: 400px;
    position: relative;
  }

  .search-input {
    width: 100%;
    padding: 12px 20px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    font-size: 14px;
    transition: var(--transition);
  }

  .search-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(128, 0, 32, 0.1);
  }

  .search-button {
    position: absolute;
    right: 5px;
    top: 50%;
    transform: translateY(-50%);
    background-color: var(--primary-color) !important;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 6px;
    cursor: pointer;
    transition: var(--transition);
  }

  .search-button:hover {
    background-color: var(--primary-hover) !important;
  }

  .sort-select, 
  .cat-filter-select {
    padding: 12px 15px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background-color: white;
    cursor: pointer;
    min-width: 200px;
    font-size: 14px;
    transition: var(--transition);
  }

  .sort-select:focus, 
  .cat-filter-select:focus {
    outline: none;
    border-color: var(--primary-color);
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 25px;
    padding: 20px 0;
  }

  
  .product-card {
    position: relative;
    background-color: white;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: var(--card-shadow);
    transition: var(--transition);
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
  }

  .product-image-container {
    position: relative;
    height: 300px;
    background-color: #f8f8f8;
    overflow: hidden;
  }

  .product-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition);
  }

  .product-card:hover .product-image-container img {
    transform: scale(1.05);
  }

  .wishlist-icon {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 35px;
    height: 35px;
    background-color: white;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: var(--transition);
    z-index: 10;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .wishlist-icon i {
    color: #888;
    font-size: 16px;
    transition: var(--transition);
  }

  .wishlist-icon.active i {
    color: #ff4d4d;
  }

  .wishlist-icon:hover {
    transform: scale(1.1);
    background-color: white;
  }


  .product-details {
    padding: 20px;
  }

  .product-details h4 {
    color: var(--text-color);
    margin-bottom: 12px;
    font-size: 16px;
    font-weight: 600;
    line-height: 1.4;
  }

  .product-pricing {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 15px;
  }

  .sale-price {
    color: var(--primary-color);
    font-weight: 700;
    font-size: 18px;
  }

  .regular-price {
    color: #999;
    text-decoration: line-through;
    font-size: 14px;
  }

  .view-details-btn {
    display: inline-block;
    width: 100%;
    padding: 12px 20px;
    background-color: var(--primary-color);
    color: white;
    text-align: center;
    text-decoration: none;
    border-radius: 8px;
    transition: var(--transition);
    border: none;
    cursor: pointer;
    font-size: 14px;
    font-weight: 600;
  }

  .view-details-btn:hover {
    background-color: var(--primary-hover);
  }
  .out-of-stock-overlay {
    background-color: rgb(207, 185, 185) !important; 
    color: red !important;
   
    border: none !important;
    transition: var(--transition);
}


  .btn-disabled {
   display: none;
  }

  .out-of-stock-badge {
    position: absolute;
    top: 15px;
    left: 15px;
    background-color: #ff4d4f;
    color: white;
    padding: 6px 12px;
    border-radius: 6px;
    font-size: 13px;
    font-weight: 500;
    z-index: 10;
  }

 
  .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    margin-top: 40px;
  }

  .pagination .btn {
    padding: 10px 20px;
    background-color: white;
    color: var(--text-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    text-decoration: none;
    transition: var(--transition);
    font-size: 14px;
  }

  .pagination .btn:hover,
  .pagination .btn.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }

  .loading {
    position: relative;
    opacity: 0.7;
    pointer-events: none;
  }

  .loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 40px;
    height: 40px;
    margin: -20px 0 0 -20px;
    border: 3px solid #f3f3f3;
    border-top: 3px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @media (max-width: 768px) {
    .shop-topbar {
      flex-direction: column;
      gap: 15px;
    }

    .search-form {
      width: 100%;
      max-width: none;
    }

    .sort-select, 
    .cat-filter-select {
      width: 100%;
    }

    .product-grid {
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 20px;
    }

    .product-image-container {
      height: 250px;
    }
  }
</style>

<div class="page-header breadcrumb-wrap">
  <div class="container">
    <div class="breadcrumb">
      <a href="/" rel="nofollow">Home</a>
      <span></span>
      <a href="/shop">Shop</a>
    </div>
  </div>
</div>

<div class="main-container">
  <section class="shop-page container">
    <div class="shop-topbar">
      <form action="/search" method="POST" class="search-form">
        <input type="text" name="query" id="search-input" placeholder="Search items..." class="search-input" />
        <button type="submit" class="search-button">Search</button>
      </form>

      <div class="sorting-container">
        <select id="sort-by" class="sort-select" onchange="handleSortChange()">
          <option value="default">Sort by: Default</option>
          <option value="popularity">Popularity</option>
          <option value="price-low-high">Price: Low to High</option>
          <option value="price-high-low">Price: High to Low</option>
          <option value="rating">Average Rating</option>
          <option value="new-arrivals">New Arrivals</option>
          <option value="alphabetical-a-z">Alphabetical (A-Z)</option>
          <option value="alphabetical-z-a">Alphabetical (Z-A)</option>
        </select>
      </div>

      <div class="category-filter-container">
        <select id="cat-filter" class="cat-filter-select" onchange="handleSortChange()">
          <option value="all-categories">All Categories</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>
    </div>

    <main class="product-grid" id="products-container">
      <% if (products && products.length > 0) { %>
        <% products.forEach(product => { %>
          <div class="product-card">
            <div class="wishlist-icon <%= wishlistProducts.includes(product._id) ? 'active' : '' %>" 
                 onclick="toggleWishlist('<%= product._id %>')">
              <i class="fa-solid fa-heart"></i>
            </div>
            <a href="/productDetails?id=<%= product._id %>">
              <div class="product-image-container">
                <img src="uploads/re-image/<%= product.productImage[0] %>" alt="<%= product.productName %>" />
                <% if (product.totalStock === 0) { %>
                  <div class="out-of-stock-badge">Out of Stock</div>
                <% } %>
              </div>
              <div class="product-details">
                <h4><%= product.productName %></h4>
                <div class="product-pricing">
                  <span class="sale-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
                  <span class="regular-price">₹<%= product.regularPrice.toLocaleString('en-IN') %></span>
                </div>
                <% if (product.totalStock === 0) { %>
                  <button class="view-details-btn btn-disabled" disabled>Out of Stock</button>
                <% } else { %>
                  <a href="/productDetails?id=<%= product._id %>" class="view-details-btn">View Details</a>
                <% } %>
              </div>
            </a>
          </div>
        <% }); %>
      <% } else { %>
        <p>No products found.</p>
      <% } %>
    </main>

    <div class="pagination">
      <% if (currentPage > 1) { %>
        <a class="btn" href="/shop?page=<%= currentPage - 1 %>">Prev</a>
      <% } %>
      
      <% for (let i = 1; i <= totalPages; i++) { %>
        <a class="btn <%= currentPage === i ? 'active' : '' %>" href="/shop?page=<%= i %>"><%= i %></a>
      <% } %>
      
      <% if (currentPage < totalPages) { %>
        <a class="btn" href="/shop?page=<%= currentPage + 1 %>">Next</a>
      <% } %>
    </div>
  </section>
</div>

  <script>

    function handleSortChange() {

      $('#products-container').addClass('loading');

      const sortBy = document.getElementById('sort-by').value;
      const category = document.getElementById('cat-filter').value;
      const searchInput = document.getElementById('search-input');
      const searchQuery = searchInput ? searchInput.value : '';

      sessionStorage.setItem('currentFilters', JSON.stringify({
        sort: sortBy,
        category: category,
        search: searchQuery
      }));

      $.ajax({
        url: '/sort-and-search',
        method: 'POST',
        data: {
          sort: sortBy,
          category: category,
          search: searchQuery
        },
        success: function (response) {
          if (response.products && response.products.length > 0) {
            updateProductList(response.products);
          } else {
            $('#products-container').html('<p>No products found.</p>');
            Swal.fire({
              position: "center",
              icon: "warning",
              title: "No products found",
              showConfirmButton: false,
              timer: 1500
            });
          }
        },
        complete: function(){
          $('#products-container').removeClass('loading');
        },
        error: function (error) {
          console.error('Error:', error);
          Swal.fire({
            position: "center",
            icon: "error",
            title: "Failed to load products",
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    }

    document.addEventListener('DOMContentLoaded', function () {
  const wishlistIcons = document.querySelectorAll('.wishlist-icon');
  wishlistIcons.forEach(icon => {
    if (icon.classList.contains('active')) {
      const productId = icon.getAttribute('onclick').match(/'([^']*)'/)[1];
      clientWishlist.add(productId);
    }
  });

  const sortSelect = document.getElementById('sort-by');
  const categorySelect = document.getElementById('cat-filter');
  const searchInput = document.getElementById('search-input');

  const savedFilters = JSON.parse(sessionStorage.getItem('currentFilters') || '{}');
  if (savedFilters.sort) sortSelect.value = savedFilters.sort;
  if (savedFilters.category) categorySelect.value = savedFilters.category;
  if (savedFilters.search) searchInput.value = savedFilters.search;

  $.ajax({
    url: '/get-wishlist',
    method: 'GET',
    success: (response) => {
      if (response.wishlist) {
        clientWishlist = new Set(response.wishlist);
        

        document.querySelectorAll('.wishlist-icon').forEach(icon => {
          const productId = icon.getAttribute('onclick').match(/'([^']*)'/)[1];
          if (clientWishlist.has(productId)) {
            icon.classList.add('active');
          }
        });
      }
    },
    complete: () => {
      handleSortChange();
    }
  });


  sortSelect.addEventListener('change', handleSortChange);
  categorySelect.addEventListener('change', handleSortChange);

  let searchTimeout;
  searchInput.addEventListener('input', function () {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(handleSortChange, 300);
  });

  document.querySelectorAll('.wishlist-icon').forEach(icon => {
    icon.addEventListener('click', (event) => {
      event.preventDefault();
      event.stopPropagation();
    });
  });
});

    let clientWishlist = new Set();

    function toggleWishlist(productId) {
    event.preventDefault();
    event.stopPropagation();

    const wishlistIcon = document.querySelector(`.wishlist-icon[onclick*="${productId}"]`);
    

    if (!wishlistIcon) {
        console.error('Wishlist icon not found for product:', productId);
        Swal.fire({
            title: 'Error',
            text: 'Could not find wishlist icon',
            icon: 'error',
            timer: 2000
        });
        return;
    }

    $.ajax({
        url: '/toggleWishlist',
        method: 'POST',
        data: { productId: productId },
        success: (response) => {
            if (response.status) {
                wishlistIcon.classList.toggle('active'); 

                Swal.fire({
                    title: response.action === 'added' ? "Added to wishlist" : "Removed from wishlist",
                    text: response.message,
                    icon: response.action === 'added' ? 'success' : 'info',
                    timer: 2000,
                });

                if (response.action === 'added') {
                    clientWishlist.add(productId);
                    wishlistIcon.classList.add('active');
                } else {
                    clientWishlist.delete(productId);
                    wishlistIcon.classList.remove('active');
                }
            }
        },
        error: (xhr) => {
            if (xhr.status === 401) {
                window.location.href = "/login";
            } else {
                Swal.fire({
                    title: 'Error',
                    text: 'There was an error while updating your wishlist',
                    icon: 'error',
                    timer: 2000
                });
            }
        }
    });
}
    $(document).ready(function () {
      $('.search-form').on('submit', function (e) {
        e.preventDefault();
        handleSortChange();
      });
    });

    function updateProductList(products) {
    const container = $('#products-container');
    container.empty();

    products.forEach(product => {
        const isInWishlist = clientWishlist.has(product._id);
        const isOutOfStock = product.totalStock === 0;
        
        const card = `
            <div class="product-card">
                <div class="wishlist-icon ${isInWishlist ? 'active' : ''}" 
                     onclick="toggleWishlist('${product._id}')">
                    <i class="fa-solid fa-heart"></i>
                </div>
                <a href="/productDetails?id=${product._id}">
                    <div class="product-image-container">
                        <img src="uploads/re-image/${product.productImage[0]}" alt="${product.productName}" />
                    </div>
                    <div class="product-details">
                        <h4>${product.productName}</h4>
                        <div class="product-pricing">
                            <span class="sale-price">₹${product.salePrice.toLocaleString('en-IN')}</span>
                            <span class="regular-price">₹${product.regularPrice.toLocaleString('en-IN')}</span>
                        </div>
                        ${isOutOfStock ? 
                            '<button class="view-details-btn out-of-stock-overlay" disabled>Out of Stock</button>' : 
                            '<a href="/productDetails?id=' + product._id + '" class="view-details-btn">View Details</a>'
                        }
                    </div>
                </a>
            </div>
        `;
        container.append(card);
    });
}


    document.querySelectorAll('.wishlist-btn').forEach(btn => {
      const productId = btn.getAttribute('onclick').match(/'([^']*)'/)[1];
      if (clientWishlist.has(productId)) {
        btn.classList.add('in-wishlist');
      }
    });


  </script>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
  <%- include("../../views/partials/user/footer") %>