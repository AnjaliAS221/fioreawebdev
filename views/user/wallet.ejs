<%- include('../partials/user/header') %>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <style>
        .dashboard-menu {
            background: linear-gradient(145deg, #ffffff, #f0f0f0);
            border-radius: 16px;
            padding: 1.5rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .dashboard-menu .nav-link {
            display: flex;
            align-items: center;
            padding: 0.8rem 1rem;
            margin-bottom: 0.5rem;
            color: #4a5568;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .dashboard-menu .nav-link i {
            margin-right: 0.8rem;
            font-size: 1.1rem;
        }

        .dashboard-menu .nav-link:hover,
        .dashboard-menu .nav-link.active {
            background: linear-gradient(145deg, #3498db, #2980b9);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 4px 10px rgba(52, 152, 219, 0.2);
        }


        .wallet-table {
            background: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .wallet-table th {
            background: #f7fafc;
            padding: 1.2rem 1rem;
            color: #4a5568;
            font-weight: 600;
            border: none;
        }

        .wallet-table td {
            padding: 1.2rem 1rem;
            border-top: 1px solid #edf2f7;
            vertical-align: middle;
        }


        .wallet-table .balance strong {
            background: linear-gradient(145deg, #3498db, #2980b9);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2.5rem;
            font-weight: 600;
        }


        .wallet-table .text-success {
            color: #48bb78 !important;
        }

        .wallet-table .text-danger {
            color: #f56565 !important;
        }

        .badge {
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-weight: 500;
            font-size: 0.875rem;
        }

        .bg-success {
            background: #c6f6d5 !important;
            color: #22543d !important;
        }

        .bg-danger {
            background: #fed7d7 !important;
            color: #742a2a !important;
        }

        .btn {
            padding: 0.6rem 1.2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(145deg, #3498db, #2980b9);
            border: none;
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
        }


        #addMoneyForm {
            background: white;
            padding: 1.5rem;
            border-radius: 16px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        #addMoneyForm .form-control {
            border-radius: 8px;
            padding: 0.8rem;
            border: 1px solid #e2e8f0;
        }

        #addMoneyForm .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }


        .pagination .page-link {
            padding: 0.6rem 1rem;
            margin: 0 0.2rem;
            border-radius: 8px;
            color: #4a5568;
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
        }

        .pagination .page-link:hover {
            background: #f7fafc;
            color: #2d3748;
        }

        .pagination .active .page-link {
            background: linear-gradient(145deg, #3498db, #2980b9);
            border-color: transparent;
            color: white;
        }

        @media (max-width: 768px) {
            .dashboard-menu {
                margin-bottom: 1.5rem;
            }

            .wallet-table td,
            .wallet-table th {
                padding: 1rem 0.8rem;
            }

            .wallet-table .balance strong {
                font-size: 2rem;
            }
        }
    </style>

    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="/" rel="nofollow">Home</a>
                    <span></span> Wallet
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">
                    <div class="col-md-3 order-1 order-md-1">
                        <div class="dashboard-menu">
                            <ul class="nav flex-column" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard"
                                        role="tab" aria-controls="dashboard" aria-selected="false">
                                        <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab"
                                        aria-controls="address" aria-selected="false">
                                        <i class="fi-rs-marker mr-10"></i>My Address
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="orders-tab" href="/order-history" aria-selected="false">
                                        <i class="fi-rs-shopping-bag mr-10"></i>Orders
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="track-orders-tab" href="/wishlist" aria-selected="false">
                                        <i class="fa fa-heart mr-10"></i> Wishlist
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="track-orders-tab" href="/wallet" aria-selected="false">
                                        <i class="fi-rs-shopping-cart-check mr-10"></i>Wallet
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="/logout">
                                        <i class="fi-rs-sign-out mr-10"></i>Logout
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="col-md-9 order-2 order-md-2">
                        <div class="table-responsive">
                            <table class="table wallet-table">
                                <thead>
                                    <tr>
                                        <th scope="col">Wallet Balance</th>
                                        <th scope="col">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="balance" data-title="Balance">
                                            <strong style="font-size: 40px;">â‚¹<%=balance.toLocaleString()%></strong>
                                        </td>
                                        <td data-title="Actions">
                                            <button onclick="showAddMoneyForm()" class="btn btn-primary">Add
                                                Money</button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>


                        <div id="addMoneyForm" class="mt-4" style="display: none;">
                            <div class="form-group">
                                <label for="amount">Enter Amount to Add</label>
                                <input type="number" id="amount" class="form-control" placeholder="Enter amount"
                                    min="1">
                            </div>
                            <button onclick="confirmAddMoney()" class="btn btn-success">Confirm Add Money</button>
                        </div>


                        <div class="table-responsive mt-4">
                            <table class="table wallet-table">
                                <thead>
                                    <tr>
                                        <th scope="col">Date</th>
                                        <th scope="col">Transaction Type</th>
                                        <th scope="col">Amount</th>
                                        <th scope="col">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% transactions.sort((a, b)=> new Date(b.date) - new Date(a.date)); %>
                                        <% for (let i=0; i < transactions.length; i++) { %>
                                            <tr>
                                                <td data-title="Date">
                                                    <%= transactions[i].date.toLocaleDateString() %>
                                                </td>
                                                <td data-title="Transaction Type">
                                                    <%= transactions[i].type %>
                                                </td>
                                                <% if (transactions[i].type==="Purchase" ) { %>
                                                    <td data-title="Amount">
                                                        <b class="text-danger" style="font-size: 25px;">-</b>&nbsp;
                                                        <strong class="text-danger">â‚¹<%=
                                                                transactions[i].amount.toLocaleString() %></strong>
                                                    </td>
                                                    <% } else if (transactions[i].type==="Refund" ) { %>
                                                        <td data-title="Amount">
                                                            <b class="text-success" style="font-size: 20px;">+</b>&nbsp;
                                                            <strong class="text-success">â‚¹<%=
                                                                    transactions[i].amount.toLocaleString() %></strong>
                                                        </td>
                                                        <% } else { %>
                                                            <td data-title="Amount">
                                                                <b class="text-success"
                                                                    style="font-size: 20px;">+</b>&nbsp;
                                                                <strong class="text-success">â‚¹<%=
                                                                        transactions[i].amount.toLocaleString() %>
                                                                        </strong>
                                                            </td>
                                                            <% } %>
                                                                <td data-title="Status">
                                                                    <span
                                                                        class="badge bg-<%= transactions[i].status === 'Success' ? 'success' : 'danger' %>">
                                                                        <%= transactions[i].status %>
                                                                    </span>
                                                                </td>
                                            </tr>
                                            <% } %>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <% if (currentPage> 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                        </li>
                        <% } %>

                            <% for (let i=1; i <=totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %>">
                                        <%= i %>
                                    </a>
                                </li>
                                <% } %>

                                    <% if (currentPage < totalPages) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                                        </li>
                                        <% } %>
                </ul>
            </nav>

        </section>
    </main>

    <script>

        function initiateAddMoney(amount) {

            Swal.fire({
                title: 'Processing...',
                text: 'Please wait while we process your request',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            fetch('/create-wallet', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ amount: parseFloat(amount) })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    Swal.close();

                    const options = {
                        key: data.keyId,
                        amount: data.amount,
                        currency: "INR",
                        name: "FIOREA",
                        description: "Wallet Top Up",
                        order_id: data.orderId,
                        handler: function (response) {

                            Swal.fire({
                                title: 'Verifying Payment...',
                                text: 'Please wait while we verify your payment',
                                allowOutsideClick: false,
                                didOpen: () => {
                                    Swal.showLoading();
                                }
                            });

                            fetch('/verify-wallet', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    paymentId: response.razorpay_payment_id,
                                    orderId: response.razorpay_order_id,
                                    signature: response.razorpay_signature,
                                    amount: amount
                                })
                            })
                                .then(res => {
                                    if (!res.ok) {
                                        throw new Error('Payment verification failed');
                                    }
                                    return res.json();
                                })
                                .then(result => {
                                    if (result.success) {
                                        Swal.fire({
                                            title: 'Success!',
                                            text: 'Your wallet has been topped up successfully.',
                                            icon: 'success'
                                        }).then(() => {
                                            window.location.reload();
                                        });
                                    } else {
                                        throw new Error(result.message || 'Payment verification failed');
                                    }
                                })
                                .catch(error => {
                                    Swal.fire({
                                        title: 'Error!',
                                        text: error.message || 'Something went wrong during payment verification.',
                                        icon: 'error'
                                    });
                                });
                        },
                        prefill: {
                            name: 'User Name',
                            email: 'user@example.com',
                            contact: '1234567890'
                        },
                        theme: {
                            color: "#3399cc"
                        },
                        modal: {
                            ondismiss: function () {
                                Swal.fire({
                                    title: 'Payment Cancelled',
                                    text: 'Your payment process was cancelled.',
                                    icon: 'info'
                                });
                            }
                        }
                    };

                    const rzp1 = new Razorpay(options);
                    rzp1.open();
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error!',
                        text: error.message || 'Something went wrong while initiating payment.',
                        icon: 'error'
                    });
                });
        }

        function showAddMoneyForm() {
            const form = document.getElementById('addMoneyForm');
            if (form.style.display === 'block') {
                form.style.display = 'none';
            } else {
                form.style.display = 'block';
            }
        }

        function confirmAddMoney() {
            const amountInput = document.getElementById('amount');
            const amount = parseFloat(amountInput.value);

            if (!amount || isNaN(amount) || amount <= 0) {
                Swal.fire({
                    title: "Invalid Amount",
                    text: "Please enter a valid amount greater than 0.",
                    icon: "error"
                });
                return;
            }

            if (amount > 50000) {
                Swal.fire({
                    title: "Amount Too High",
                    text: "Maximum amount allowed is â‚¹50,000 per transaction.",
                    icon: "warning"
                });
                return;
            }

            Swal.fire({
                title: "Add Money",
                text: `Do you want to add â‚¹${amount.toFixed(2)} to your wallet?`,
                icon: "info",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, add money!"
            }).then((result) => {
                if (result.isConfirmed) {
                    initiateAddMoney(amount);
                }
            });
        }


    </script>